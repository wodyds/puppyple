<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="trade.mapper">

	<select id="detail" resultType="trade.TradeVO" >
		select b.* , (select member_nickname from member m where m.member_id = b.member_id ) member_nickname,
		 (select like_member_id from favorites where pid = #{id} and like_member_id = #{loginInfo_member_id, jdbcType=VARCHAR}) like_member_id,
		 (select count(*) from favorites where pid = #{id}) like_member_id_cnt 
		from board b 
		where id = #{id}
	</select>
	
	<!-- 댓글 수정 -->
	<update id="comment_update">
		update board_comment set content=#{content} where id
		= #{id}
	</update>

	<!-- 댓글 삭제 -->
	<delete id="comment_delete">
		delete from board_comment
		where id = #{id}
	</delete>

	<!-- 댓글 목록 조회 -->
	<select id="comment_list" resultType="trade.TradeCommentVO">
		select c.*, (select member_nickname from member where member.member_id =
		c.member_id) member_nickname
		from board_comment c
		where pid = #{pid}
		order by id desc
	</select>

	<!-- 댓글 저장처리, 내용, 작성자, 원글 정보를 저장 -->
	<insert id="comment_insert">
		insert into board_comment(flag, content, member_id, pid)
		values('T', #{content}, #{member_id}, #{pid} )
	</insert>  

	<!-- 중고거래 게시글 내용 수정 -->
	<update id="update">
		update board set board_title=#{board_title}, board_content=#{board_content}
		, board_filename = #{board_filename, jdbcType=VARCHAR}
		, board_filepath = #{board_filepath, jdbcType=VARCHAR}
		where id = #{id}
	</update>
	
	<!-- ID 해당 중고거래글 삭제 -->
	<delete id="delete">
		delete from board
		where id = #{id}
	</delete>

	<!-- 상세화면 조회 전 조회수 증가(변경) -->
	<update id="read">
		update board set board_readcnt = board_readcnt + 1
		where id = #{id}
	</update>

	<sql id="where_search2">
		<!-- 제목 또는 내용에 대한 검색 처리 -->
		<if test="search == 'board_title' or search == 'board_content'">
			where ${search} like '%'||#{keyword}||'%'
			and flag = 'T'
		</if>
		<!-- 작성자에 대한 검색 처리 -->
		<if test="search == 'member_id'">
			where member_id in (select member_id from member where member_nickname like
			'%'||#{keyword}||'%')
			and flag = 'T'
		</if>
		<!-- 전체에 대한 검색 처리 -->
		<if test="search == 'all'">
			where board_title like '%'||#{keyword} ||'%'
			or board_content like '%'||#{keyword} ||'%'
			or member_id in (select member_id from member where member_nickname like
			'%'||#{keyword}||'%')
			and flag = 'T'
		</if>
	</sql>
	
	<sql id="where_search">
		<!-- 전체에 대한 검색 처리 -->
		<if test="search == 'all'">
			where board_title like '%'||#{keyword} ||'%'
			or board_content like '%'||#{keyword} ||'%'
			or member_id in (select member_id from member where member_nickname like
			'%'||#{keyword}||'%')
		</if>
		<!-- 제목 또는 내용에 대한 검색 처리 -->
		<if test="search == 'board_title' or search == 'board_content'">
			where ${search} like '%'||#{keyword}||'%'
		</if>
		<!-- 작성자에 대한 검색 처리 -->
		<if test="search == 'member_id'">
			where member_id in (select member_id from member where member_nickname like
			'%'||#{keyword}||'%')
		</if>
		<if test="keyword == ''">
			
		</if>
	</sql>
	
	<!-- 중고거래 신규 글 등록 -->
	<insert id="insert">
		insert into board (flag, board_title, board_content,
		member_id, board_filename, board_filepath )
		values ('T', #{board_title},
		#{board_content}, #{member_id}
		, #{board_filename, jdbcType=VARCHAR}
		, #{board_filepath, jdbcType=VARCHAR } )
	</insert>
	   
	   	<!-- 전체 중고거래글 수 조회 -->
	<select id="totalList" resultType="integer">
		select count(*) from (select * from board where flag = 'T') <include refid="where_search" />
	</select>

	<!-- 페이지 처리된 글 목록 조회 -->
	
 	<select id="list" resultType="trade.TradeVO">
		select *
			from (select rownum no, t.*, ( select member_nickname from member where member.member_id = t.member_id ) member_nickname
				from ( select * from board <include refid="where_search2" />
						order by id) t
						where flag = 'T'
			order by no desc)
		where no between #{beginList} and #{endList}
	</select>

</mapper>